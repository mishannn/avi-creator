using System;
using System.Drawing;
using AForge.Video;
using AForge.Video.FFMPEG;

namespace AVICreator
{
    class AVICreator
    {
        // Параметр stepNum указывает номер текущего шага для создания изображения, с его помощью мы будем знать, какие компоненты цвета нужно использовать
        // 0 - первый шаг, на нем компоненты R и B уменьшаются до 0 с каждым кадром
        // 1 - второй шаг, на нем компоненты G и B увеличиваются с каждым кадром до 255
        // Параметр frameNum указывает номер текущего кадра (0 - 255), с помощью него мы узнаем насколько увеличивать или уменьшать значения компонент цвета
        private Bitmap CreateFrame(int stepNum, int frameNum)
        {
            var image = new Bitmap(256, 256); // Создаем новое пустое изображение

            for (int x = 0; x < 256; x++) // Пробегаем по оси X (по строкам)
            {
                for (int y = 0; y < 256; y++) // Пробегаем по оси Y (по столбцам)
                {
                    var color = Color.FromArgb(0, 0, 0); // Создаем черный цвет (начальный)
                    if (stepNum == 0) // Проверяем шаг (описание шагов выше, в начале функции), если первый - идем в данный блок (счет от 0)
                    {
                        color = Color.FromArgb(
                            (x > frameNum) ? (x - frameNum) : 0, // R компонента (растет по X, но с каждым кадром уменьшается на номер кадра)
                            0, // G компонента - на данном шаге не используется
                            (y > frameNum) ? (y - frameNum) : 0); // B компонента (растет по Y, но с каждым кадром уменьшается на номер кадра)
                    }
                    else if (stepNum == 1) // если шаг второй - идем в данный блок
                    {
                        color = Color.FromArgb(
                            0, // R компонента - на данном шаге не используется
                            (x < frameNum) ? x : frameNum, // G компонента (растет по X, но значение не более, чем номер кадра)
                            (y < frameNum) ? y : frameNum); // B компонента (растет по Y, но значение не более, чем номер кадра)
                    }
                    image.SetPixel(x, y, color); // Устанавливаем в пиксель с координатами X, Y значение цвета равное color, который мы создали ранее
                }
            }

            return image; // Возвращаем полученное изображение в качестве результата
        }

        public void Run()
        {
            using (var writer = new VideoFileWriter()) // Создаем объект класса для записи в видеофайл, using для того, чтобы после его использования очистить ресурсы
            {
                writer.Open("frames.avi", 256, 256); // Открываем файл frames.avi для записи с высотой и шириной равными 256

                for (int s = 0; s < 2; s++) // s - значение шага, будет 2 шага: 0 и 1
                {
                    for (int f = 0; f < 256; f++) // f - номер кадра в текущем шаге, от 0 до 255, потому что максимальное значение компоненты цвета - 255
                    {
                        using (var frame = CreateFrame(s, f)) // Создаем изображение для кадра с помощью функции выше
                        {
                            writer.WriteVideoFrame(frame); // Добавляем данный кадр в видеофайл
                        }
                        Console.WriteLine("Step: " + s + " | Frame: " + f); // Вывод информации о номере шага и номере кадра в шаге
                    }
                }

                writer.Close(); // Закрываем файл
            }
        }
    }
}
